name: New - Deploy main to production
on:
  workflow_call:
    inputs:
      NODE_VERSION:
        required: true
        type: string

jobs:
  reusable_workflow_job:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: "us-east-1"
    steps:
      - name: Checkout source code
        uses: actions/checkout@master

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Node version
        run: echo ${{ inputs.NODE_VERSION }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Generate version file with hash
        run: git rev-parse --short HEAD > info.txt &&
          date +"%D %T" >> info.txt &&
          echo ${{github.ref}} >> info.txt

      - name: Deploy
        run: |
          npm run build
          cp info.txt dist/
          aws s3 cp \
            --recursive \
            --region us-east-1 \
            ./dist s3://front-farm-plataforma-prd/${{ secrets.MFE_CONTEXT }}

      - name: Invalidate Cloudfront
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.CF_PRD }}
          PATHS: "/${{ secrets.MFE_CONTEXT }}/*"

      - name: Upgrade version in package.json
        run: npm version patch --no-git-tag-version -m "v%s"
      - name: Get version from package.json
        run: node -p -e '`PACKAGE_VERSION=${require("./package.json").version}`' >> $GITHUB_ENV
      - name: Create release
        # https://github.com/actions/create-release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.PACKAGE_VERSION }}
          name: ${{ env.PACKAGE_VERSION }}
          body: ${{steps.changelog.outputs.changelog}}
          draft: false
          prerelease: false
      - name: Commit report
        run: |
          git config user.email github-actions@github.com
          git config user.name github-actions
          git add .
          git commit -am "Automated bump version ${{ env.PACKAGE_VERSION }}"
          git push
